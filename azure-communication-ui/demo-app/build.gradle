plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

Properties properties = new Properties()
if (project.rootProject.file('local.properties').canRead()) {
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
}

android {
    compileSdkVersion 33

    defaultConfig {
        applicationId "com.azure.android.communication.ui.callingcompositedemoapp"
        targetSdkVersion 33
        versionCode ui_library_version_code

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField 'String', 'TOKEN_FUNCTION_URL', properties.getProperty('TOKEN_FUNCTION_URL', '""')
        buildConfigField 'String', 'USER_NAME', properties.getProperty('USER_NAME', '""')
        buildConfigField 'String', 'GROUP_CALL_ID', properties.getProperty('GROUP_CALL_ID', '""')
        buildConfigField 'String', 'TEAMS_MEETING_LINK', properties.getProperty('TEAMS_MEETING_LINK', '""')
        buildConfigField 'String', 'ACS_TOKEN', properties.getProperty('ACS_TOKEN', '""')
        buildConfigField 'String', 'APP_SECRET', properties.getProperty('APP_SECRET', '""')
        buildConfigField 'String', 'REMOTE_PARTICIPANT_AVATAR_TEST_URL', properties.getProperty('REMOTE_PARTICIPANT_AVATAR_TEST_URL', '""')
        buildConfigField 'String', 'ACS_TOKEN_EXPIRED', properties.getProperty('ACS_TOKEN_EXPIRED', '""')
        buildConfigField 'String', 'IDENTITY', properties.getProperty('IDENTITY', '""')
        buildConfigField 'boolean', 'CHECK_TASK_ROOT', String.valueOf(!shouldNotCheckTaskRoot())
        buildConfigField 'String', 'THREAD_ID', properties.getProperty('THREAD_ID', '""')
        buildConfigField 'String', 'END_POINT_URL', properties.getProperty('END_POINT_URL', '""')
        buildConfigField "String", 'AAD_TOKEN', properties.getProperty('AAD_TOKEN', '""')
        buildConfigField 'String', 'ROOMS_ID', properties.getProperty('ROOMS_ID', '""')
    }

    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
        release {
            storeFile file(String.valueOf(System.getenv("KEYSTORE_FILEPATH")))
            storePassword System.getenv("KEYSTORE_PASSWORD")
            keyAlias System.getenv("KEY_ALIAS")
            keyPassword System.getenv("KEY_PASSWORD")
        }
    }

    buildFeatures {
        viewBinding true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    testOptions {
        animationsDisabled = true
        packagingOptions {
            jniLibs {
                useLegacyPackaging = true
            }
        }
        unitTests {
            returnDefaultValues = true
            all {
                failFast = true
            }
        }
    }

    sourceSets {
        calling {
            java.srcDirs = ['src/main/java', 'src/calling/java']
            res.srcDirs = ['src/main/res', 'src/calling/res']
            manifest.srcFile 'src/calling/AndroidManifest.xml'
            androidTest {
                java.srcDirs = ['src/calling-test/java']
            }
        }
        chat {
            java.srcDirs = ['src/main/java', 'src/chat/java']
            res.srcDirs = ['src/main/res', 'src/chat/res']
            manifest.srcFile 'src/chat/AndroidManifest.xml'
        }
        callwithchat {
            java.srcDirs = ['src/main/java', 'src/call-with-chat/java']
            res.srcDirs = ['src/main/res', 'src/call-with-chat/res']
            manifest.srcFile 'src/call-with-chat/AndroidManifest.xml'
        }
    }

    flavorDimensions "product"
    productFlavors {
        calling {
            minSdkVersion 21
            dimension "product"
            matchingFallbacks = ["calling"]

            versionName "$call_library_version_name"

            buildTypes {
                release {
                    minifyEnabled true
                    shrinkResources true
                    manifestPlaceholders = [
                            appIcon     : "@mipmap/ic_launcher",
                            appIconRound: "@mipmap/ic_launcher_round"
                    ]
                    proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'acs-ui-library.pro'
                    if (file(String.valueOf(System.getenv("KEYSTORE_FILEPATH"))).canRead()) {
                        signingConfig signingConfigs.release
                    }
                }

                debug {
                    applicationIdSuffix = ".debug"
                    manifestPlaceholders = [
                            appIcon     : "@mipmap/ic_launcher_debug",
                            appIconRound: "@mipmap/ic_launcher_debug_round"
                    ]
                }
            }
        }
        chat {
            minSdkVersion 23
            dimension "product"
            matchingFallbacks = ["chat"]
            versionName "$chat_library_version_name"

            buildTypes {
                release {
                    minifyEnabled false
                    shrinkResources false
                    manifestPlaceholders = [
                            appIcon     : "@mipmap/ic_launcher",
                            appIconRound: "@mipmap/ic_launcher_round"
                    ]
                    if (file(String.valueOf(System.getenv("KEYSTORE_FILEPATH"))).canRead()) {
                        signingConfig signingConfigs.release
                    }
                }

                debug {
                    applicationIdSuffix = ".debug"
                    manifestPlaceholders = [
                            appIcon     : "@mipmap/ic_launcher_debug",
                            appIconRound: "@mipmap/ic_launcher_debug_round"
                    ]
                }
            }
        }
        callwithchat {
            minSdkVersion 23
            dimension "product"
            matchingFallbacks = ["callwithchat"]
            buildTypes {
                release {
                    minifyEnabled false
                    shrinkResources false
                    manifestPlaceholders = [
                            appIcon     : "@mipmap/ic_launcher",
                            appIconRound: "@mipmap/ic_launcher_round"
                    ]
                    if (file(String.valueOf(System.getenv("KEYSTORE_FILEPATH"))).canRead()) {
                        signingConfig signingConfigs.release
                    }
                }

                debug {
                    applicationIdSuffix = ".debug"
                    manifestPlaceholders = [
                            appIcon     : "@mipmap/ic_launcher_debug",
                            appIconRound: "@mipmap/ic_launcher_debug_round"
                    ]
                }
            }
        }
    }
    packagingOptions {
        resources.excludes.add("META-INF/*")
    }
}

dependencies {
    def app_center_sdk_version = '4.1.0'
    callingImplementation project(path: ':calling')
    chatImplementation project(path: ':chat')
    callwithchatImplementation project(path: ':call-with-chat')

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.core:core-ktx:$androidx_core_ktx_version"
    implementation "androidx.appcompat:appcompat:$androidx_appcompat_version"
    implementation "androidx.activity:activity-ktx:$androidx_activity_ktx_version"
    implementation 'com.google.android.material:material:1.6.1'
    implementation "androidx.constraintlayout:constraintlayout:$androidx_constraint_layout_version"
    implementation 'com.github.kittinunf.fuel:fuel:2.3.1'
    implementation "com.microsoft.appcenter:appcenter-analytics:$app_center_sdk_version"
    implementation "com.microsoft.appcenter:appcenter-crashes:$app_center_sdk_version"
    implementation 'com.google.code.gson:gson:2.8.9'
    implementation "com.microsoft.appcenter:appcenter-distribute:$app_center_sdk_version"
    implementation files('lib/magnifier-0.0.17.aar')
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.9.1'
    testImplementation "junit:junit:$junit_version"
    androidTestImplementation('com.microsoft.appcenter:espresso-test-extension:1.4')
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'
    androidTestImplementation 'net.java.dev.jna:jna:5.10.0'
    androidTestImplementation("org.jetbrains.kotlinx:kotlinx-coroutines-test:$jetbrains_kotlinx_coroutines_test_version") {
        exclude group: "net.java.dev.jna", module: "jna"
    }
    androidTestImplementation "androidx.test.ext:junit:$androidx_junit_version"
    androidTestImplementation "androidx.test:rules:$androidx_test_rules_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidx_espresso_core_version"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$androidx_espresso_contrib_version"
    androidTestImplementation "com.squareup.leakcanary:leakcanary-android-instrumentation:2.9.1"
}
